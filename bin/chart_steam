#!/usr/bin/perl

use strict;
use warnings;
use Carp;
use English;
use LifeGraphs qw(write_file :defaults);
use Data::Dumper;
use DateTime;
use Chart::Strip;

# verify data directory
my $data_dir = verify_datadir();
chdir("$data_dir/../Dash") or croak "couldn't get to Dash directory: $ERRNO"; 

# defaults
my $chart_width=850;
my @color_set = @{ color_set('fini1') };

# retrieve existing data
my $steam_storable_filename = 'steam.storable';
my $data = get_storable("$data_dir/$steam_storable_filename",1);
my $steam_percents_storable_filename = 'steam_percents.storable';
my $percent_data = get_storable("$data_dir/$steam_percents_storable_filename",1);

# loop through history and build data slices
my @data_achievements;
my @data_badges;
my @data_game_cards;
my @data_games;
my @data_perfect_games;
my @data_reviews;
my @data_screenshots;
my @data_hours_2wks;
my @data_completion_rate;

foreach my $day ( sort keys %{ $data } ) { 
	next unless $day =~ /^\d+-\d+-\d+/;
	my $day_obj = parse_statsday($day);
	my $unix_seconds = $day_obj->epoch();
	#die "$day $day_obj $unix_seconds\n";


	my $metric = $data->{$day}->{Achievements};
	#print "Achievements: $metric $unix_seconds\n";
	my $data_item = { time => $unix_seconds, value => $metric };
	push (@data_achievements, $data_item);

	$metric = $data->{$day}->{'Perfect Games'};
	#print "Perfect Games: $metric $unix_seconds\n";
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_perfect_games, $data_item);

	$metric = $data->{$day}->{'Avg. Game Completion Rate'};
	$metric =~ s/\%$//; # strip trailing %
	#print "Avg Completion Rate: $metric $unix_seconds\n";
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_completion_rate, $data_item);


	$metric = $data->{$day}->{'Badges Earned'};
	#print "Badges: $metric $unix_seconds\n";
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_badges, $data_item);

	$metric = $data->{$day}->{'Game Cards'};
	#print "Game Cards: $metric $unix_seconds\n";
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_game_cards, $data_item);


	$metric = $data->{$day}->{'recent_game_activity'};
	$metric =~ s/ hours past.*$//;
	#print "recent_game_activity: $metric $unix_seconds\n";
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_hours_2wks, $data_item);


	$metric = $data->{$day}->{'Reviews'};
	#print "Reviews: $metric $unix_seconds\n";
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_reviews, $data_item);

	$metric = $data->{$day}->{'Screenshots'};
	#print "Screenshots: $metric $unix_seconds\n";
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_screenshots, $data_item);


}

my @data_percent_chicks_overall;
my @data_percent_chicks_played;
my @data_percent_chicks_chieved;

foreach my $day ( sort keys %{ $percent_data } ) { 
	next unless $day =~ /^\d+-\d+-\d+/;
	my $day_obj = parse_statsday($day);
	my $unix_seconds = $day_obj->epoch();

	my $metric = 100 * $percent_data->{$day}->{'chicks_overall_percent'};
	die "no data for $day for percents" unless defined $metric;
	my $data_item = { time => $unix_seconds, value => $metric };
	push (@data_percent_chicks_overall, $data_item);

	$metric = 100 * $percent_data->{$day}->{'chicks_played_percent'};
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_percent_chicks_played, $data_item);

	$metric = 100 * $percent_data->{$day}->{'chicks_chieved_percent'};
	$data_item = { time => $unix_seconds, value => $metric };
	push (@data_percent_chicks_chieved, $data_item);
}

#die Dumper( \@data_percent_chicks_overall, \@data_percent_chicks_played );

#
# build charts
#

my $chart = Chart::Strip->new( title => "Steam Achievements", width => $chart_width, height => 100 );
$chart->add_data(\@data_achievements, { style => 'line', label => 'Total Achievements', color => $color_set[1] });

my $fh;
my $filename = "steam_achievements.png";
write_file($filename,$chart->png(), 'Dash');


$chart = Chart::Strip->new( title => "Steam Achievement Percentages", width => $chart_width );
$chart->add_data(\@data_completion_rate, { style => 'line', label => 'Steam', color => $color_set[3] }, thickness => 2);
$chart->add_data(\@data_perfect_games, { style => 'line', label => 'Perfect Games', color => $color_set[4] });
$chart->add_data(\@data_percent_chicks_played, { style => 'line', label => 'played', color => $color_set[2] });
$chart->add_data(\@data_percent_chicks_overall, { style => 'line', label => 'overall', color => $color_set[1] });
$chart->add_data(\@data_percent_chicks_chieved, { style => 'line', label => 'chieved', color => $color_set[4] });

$filename = "steam_achievement_percentage.png";
write_file($filename,$chart->png(), 'Dash');


$chart = Chart::Strip->new( title => "Steam Time", width => $chart_width );
$chart->add_data(\@data_hours_2wks, { style => 'line', label => 'hours played in previous 2 weeks', color => $color_set[6] });

$filename = "steam_time.png";
write_file($filename,$chart->png(), 'Dash');


$chart = Chart::Strip->new( title => "Steam Community", width => $chart_width );
$chart->add_data(\@data_screenshots, { style => 'line', label => 'Screenshots', color => $color_set[1] });
$chart->add_data(\@data_reviews, { style => 'line', label => 'Reviews', color => $color_set[2] });
$chart->add_data(\@data_badges, { style => 'line', label => 'Badges', color => $color_set[4] });
$chart->add_data(\@data_game_cards, { style => 'line', label => 'Game Cards', color => $color_set[6] });

$filename = "steam_community.png";
write_file($filename,$chart->png(), 'Dash');
